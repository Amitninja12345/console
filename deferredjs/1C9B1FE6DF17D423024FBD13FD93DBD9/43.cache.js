$wnd.hal.runAsyncCallback43("function $clinit_ServerMonitorColumn(){\n  $clinit_ServerMonitorColumn = emptyMethod;\n  $clinit_StaticItemColumn();\n}\n\nfunction ServerMonitorColumn(finder, environment, dispatcher, statementContext, itemActionFactory, places, resources){\n  $clinit_ServerMonitorColumn();\n  StaticItemColumn_0.call(this, finder, 'server-monitor', resources.constants_0().monitor(), new ServerMonitorColumn$lambda$0$Type(resources, itemActionFactory, places, environment, dispatcher, statementContext));\n  this.$init_1203();\n}\n\nfunction lambda$0_185(resources_0, itemActionFactory_1, places_2, environment_3, dispatcher_4, statementContext_5, context_6, callback_7){\n  $clinit_ServerMonitorColumn();\n  var address, items, operation;\n  {\n    items = newArrayList_2(stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_core_finder_StaticItem_2_classLit, 1), {4:1, 1:1, 5:1}, 136, 0, [(new StaticItem$Builder(resources_0.constants_0().status_2())).action_6(itemActionFactory_1.view_1(places_2.selectedServer_0('server-status').build_1())).onPreview_1(new ServerStatusPreview(environment_3, dispatcher_4, statementContext_5, resources_0)).build_11(), (new StaticItem$Builder('Datasources')).nextColumn_1('data-source-runtime').onPreview_1(new PreviewContent_0('Datasources', resources_0.previews_0().runtimeDatasources())).build_11(), (new StaticItem$Builder('JPA')).nextColumn_1('jpa-runtime').onPreview_1(new PreviewContent_0('JPA', resources_0.previews_0().runtimeJpa())).build_11(), (new StaticItem$Builder('JNDI')).action_6(itemActionFactory_1.view_1(places_2.selectedServer_0('jndi').build_1())).onPreview_1(new PreviewContent_0('JNDI', resources_0.previews_0().runtimeJndi())).build_11()]));\n    address = of_18(($clinit_StatementContext$Tuple() , SELECTED_HOST), ($clinit_StatementContext$Tuple() , SELECTED_SERVER)).resolve_3(statementContext_5, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, []));\n    operation = (new Operation$Builder('read-resource', address)).param_2('attributes-only', true).build_13();\n    dispatcher_4.execute_12(operation, new ServerMonitorColumn$lambda$1$Type(items, resources_0, callback_7));\n  }\n}\n\nfunction lambda$1_112(items_0, resources_1, callback_2, result_3){\n  $clinit_ServerMonitorColumn();\n  var serverVersion;\n  {\n    serverVersion = parseVersion_0(result_3);\n    if (supportsListLogFiles(serverVersion)) {\n      items_0.add_0((new StaticItem$Builder(resources_1.constants_0().logFiles_2())).nextColumn_1('log-file').onPreview_1(new PreviewContent_0(resources_1.constants_0().logFiles_2(), resources_1.previews_0().runtimeLogFiles())).build_11());\n    }\n    callback_2.onSuccess_0(items_0);\n  }\n}\n\ndefineClass(2520, 186, {1:1, 34:1}, ServerMonitorColumn);\n_.$init_1203 = function $init_1203(){\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerMonitorColumn_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerMonitorColumn', 2520, Lorg_jboss_hal_core_finder_StaticItemColumn_2_classLit);\nfunction $clinit_ServerMonitorColumn$lambda$0$Type(){\n  $clinit_ServerMonitorColumn$lambda$0$Type = emptyMethod;\n}\n\nfunction ServerMonitorColumn$lambda$0$Type(resources_0, itemActionFactory_1, places_2, environment_3, dispatcher_4, statementContext_5){\n  $clinit_ServerMonitorColumn$lambda$0$Type();\n  this.resources_0 = resources_0;\n  this.itemActionFactory_1 = itemActionFactory_1;\n  this.places_2 = places_2;\n  this.environment_3 = environment_3;\n  this.dispatcher_4 = dispatcher_4;\n  this.statementContext_5 = statementContext_5;\n}\n\ndefineClass(2522, 1, {1:1}, ServerMonitorColumn$lambda$0$Type);\n_.get_13 = function get_213(arg0, arg1){\n  lambda$0_185(this.resources_0, this.itemActionFactory_1, this.places_2, this.environment_3, this.dispatcher_4, this.statementContext_5, arg0, arg1);\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerMonitorColumn$lambda$0$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerMonitorColumn/lambda$0$Type', 2522, Ljava_lang_Object_2_classLit);\nfunction $clinit_ServerMonitorColumn$lambda$1$Type(){\n  $clinit_ServerMonitorColumn$lambda$1$Type = emptyMethod;\n}\n\nfunction ServerMonitorColumn$lambda$1$Type(items_0, resources_1, callback_2){\n  $clinit_ServerMonitorColumn$lambda$1$Type();\n  this.items_0 = items_0;\n  this.resources_1 = resources_1;\n  this.callback_2 = callback_2;\n}\n\ndefineClass(2521, 1, {1:1, 24:1}, ServerMonitorColumn$lambda$1$Type);\n_.onSuccess_0 = function onSuccess_217(arg0){\n  lambda$1_112(this.items_0, this.resources_1, this.callback_2, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerMonitorColumn$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerMonitorColumn/lambda$1$Type', 2521, Ljava_lang_Object_2_classLit);\nfunction $clinit_ServerStatusPreview(){\n  $clinit_ServerStatusPreview = emptyMethod;\n  $clinit_PreviewContent();\n}\n\nfunction ServerStatusPreview(environment, dispatcher, statementContext, resources){\n  $clinit_ServerStatusPreview();\n  PreviewContent.call(this, resources.constants_0().status_2());\n  this.$init_1211();\n  this.dispatcher = dispatcher;\n  this.statementContext = statementContext;\n  this.resources = resources;\n  this.usedHeap = new Utilization(resources.constants_0().used(), 'MB', environment.isStandalone(), true);\n  this.committedHeap = new Utilization(resources.constants_0().commited(), 'MB', environment.isStandalone(), true);\n  this.threads = new Utilization('Daemon', 'Threads', environment.isStandalone(), false);\n  castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(castTo(this.previewBuilder().p(), 3).css_0('lead'), 3).span_0(), 3).rememberAs('os'), 3).end(), 3).span_0(), 3).rememberAs('os-version'), 3).end(), 3).span_0(), 3).rememberAs('processors'), 3).end(), 3).add_11('br'), 3).span_0(), 3).rememberAs('jvm'), 3).end(), 3).span_0(), 3).rememberAs('jvm-version'), 3).end(), 3).add_11('br'), 3).span_0(), 3).rememberAs('uptime'), 3).end(), 3).end(), 3).div_0(), 3).css_0('clearfix'), 3).a(), 3).css_1('clickable', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, ['pull-right'])), 3).on_0(($clinit_EventType() , click_0), new ServerStatusPreview$lambda$0$Type(this)), 3).span_0(), 3).css_1(fontAwesome('refresh'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, ['margin-right-5'])), 3).end(), 3).span_0(), 3).textContent_0(resources.constants_0().refresh_13()), 3).end(), 3).end(), 3).end(), 3).h_1(2), 3).css_0('underline'), 3).textContent_0('Heap'), 3).end(), 3).add_12(this.usedHeap), 3).add_12(this.committedHeap), 3).h_1(2), 3).css_0('underline'), 3).textContent_0('Threads'), 3).end(), 3).add_12(this.threads);\n  this.osName = this.previewBuilder().referenceFor('os');\n  this.osVersion = this.previewBuilder().referenceFor('os-version');\n  this.processors = this.previewBuilder().referenceFor('processors');\n  this.jvm = this.previewBuilder().referenceFor('jvm');\n  this.jvmVersion = this.previewBuilder().referenceFor('jvm-version');\n  this.uptime = this.previewBuilder().referenceFor('uptime');\n}\n\ndefineClass(3075, 39, {1:1, 12:1, 39:1}, ServerStatusPreview);\n_.$init_1211 = function $init_1211(){\n}\n;\n_.lambda$0_101 = function lambda$0_189(event_0){\n  $clinit_ServerStatusPreview();\n  this.update_9(null);\n}\n;\n_.lambda$1_67 = function lambda$1_114(result_0){\n  $clinit_ServerStatusPreview();\n  var committed, daemonCount, heapMemoryNode, max_0, osNode, runtimeNode, threadCount, threadsNode, used;\n  {\n    osNode = result_0.step(0).get_17('result');\n    $setTextContent(this.osName, osNode.get_17('name').asString());\n    $setTextContent(this.osVersion, ' ' + osNode.get_17('version').asString());\n    $setTextContent(this.processors, ', ' + osNode.get_17('available-processors').asInt() + ' ' + this.resources.constants_0().processors_0());\n    runtimeNode = result_0.step(1).get_17('result');\n    $setTextContent(this.jvm, runtimeNode.get_17('vm-name').asString());\n    $setTextContent(this.jvmVersion, ' ' + runtimeNode.get_17('spec-version').asString());\n    $setTextContent(this.uptime, this.resources.messages_0().uptime_0(humanReadableDuration(runtimeNode.get_17('uptime').asLong())));\n    heapMemoryNode = result_0.step(2).get_17('result').get_17('heap-memory-usage');\n    used = div_1(div_1(heapMemoryNode.get_17('used').asLong(), 1024), 1024);\n    committed = div_1(div_1(heapMemoryNode.get_17('committed').asLong(), 1024), 1024);\n    max_0 = div_1(div_1(heapMemoryNode.get_17('max').asLong(), 1024), 1024);\n    this.usedHeap.update_0(used, max_0);\n    this.committedHeap.update_0(committed, max_0);\n    threadsNode = result_0.step(3).get_17('result');\n    threadCount = threadsNode.get_17('thread-count').asLong();\n    daemonCount = threadsNode.get_17('daemon-thread-count').asLong();\n    this.threads.update_0(daemonCount, threadCount);\n  }\n}\n;\n_.update_1 = function update_31(item_0){\n  this.update_9(castTo(item_0, 136));\n}\n;\n_.update_9 = function update_32(item_0){\n  var mbean, memoryOp, memoryTmpl, osOp, osTmpl, runtimeOp, runtimeTmpl, threadingOp, threadingTmpl;\n  mbean = of_19(($clinit_StatementContext$Tuple() , SELECTED_HOST), ($clinit_StatementContext$Tuple() , SELECTED_SERVER), 'core-service=platform-mbean');\n  osTmpl = mbean.append_22('type=operating-system');\n  runtimeTmpl = mbean.append_22('type=runtime');\n  memoryTmpl = mbean.append_22('type=memory');\n  threadingTmpl = mbean.append_22('type=threading');\n  osOp = (new Operation$Builder('read-resource', osTmpl.resolve_3(this.statementContext, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, [])))).param_2('attributes-only', true).param_2('include-runtime', true).build_13();\n  runtimeOp = (new Operation$Builder('read-resource', runtimeTmpl.resolve_3(this.statementContext, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, [])))).param_2('attributes-only', true).param_2('include-runtime', true).build_13();\n  memoryOp = (new Operation$Builder('read-resource', memoryTmpl.resolve_3(this.statementContext, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, [])))).param_2('attributes-only', true).param_2('include-runtime', true).build_13();\n  threadingOp = (new Operation$Builder('read-resource', threadingTmpl.resolve_3(this.statementContext, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1, 6:1}, 2, 6, [])))).param_2('attributes-only', true).param_2('include-runtime', true).build_13();\n  this.dispatcher.execute_10(new Composite_0(osOp, stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_dmr_model_Operation_2_classLit, 1), {4:1, 1:1, 5:1, 149:1}, 96, 0, [runtimeOp, memoryOp, threadingOp])), new ServerStatusPreview$lambda$1$Type(this));\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerStatusPreview_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerStatusPreview', 3075, Lorg_jboss_hal_core_finder_PreviewContent_2_classLit);\nfunction $clinit_ServerStatusPreview$lambda$0$Type(){\n  $clinit_ServerStatusPreview$lambda$0$Type = emptyMethod;\n}\n\nfunction ServerStatusPreview$lambda$0$Type($$outer_0){\n  $clinit_ServerStatusPreview$lambda$0$Type();\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(3076, 1, {1:1}, ServerStatusPreview$lambda$0$Type);\n_.handleEvent_0 = function handleEvent_90(arg0){\n  this.$$outer_0.lambda$0_101(arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerStatusPreview$lambda$0$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerStatusPreview/lambda$0$Type', 3076, Ljava_lang_Object_2_classLit);\nfunction $clinit_ServerStatusPreview$lambda$1$Type(){\n  $clinit_ServerStatusPreview$lambda$1$Type = emptyMethod;\n}\n\nfunction ServerStatusPreview$lambda$1$Type($$outer_0){\n  $clinit_ServerStatusPreview$lambda$1$Type();\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(3077, 1, {1:1, 76:1}, ServerStatusPreview$lambda$1$Type);\n_.onSuccess_0 = function onSuccess_220(arg0){\n  this.$$outer_0.lambda$1_67(arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_server_ServerStatusPreview$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.server', 'ServerStatusPreview/lambda$1$Type', 3077, Ljava_lang_Object_2_classLit);\ndefineClass(1107, 1, {1:1});\n_.get_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$ = function get_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$(){\n  var result;\n  result = this.org$jboss$hal$client$runtime$server$ServerMonitorColumn_org$jboss$hal$client$runtime$server$ServerMonitorColumn_methodInjection(this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$Finder$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_config().get_Key$type$org$jboss$hal$config$Environment$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_dmr_dispatch().get_Key$type$org$jboss$hal$dmr$dispatch$Dispatcher$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_meta().get_Key$type$org$jboss$hal$meta$StatementContext$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$ItemActionFactory$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_mvp().get_Key$type$org$jboss$hal$core$mvp$Places$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_resources().get_Key$type$org$jboss$hal$resources$Resources$_annotation$$none$$());\n  this.memberInject_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$(result);\n  return result;\n}\n;\n_.memberInject_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$ = function memberInject_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$(injectee){\n}\n;\n_.org$jboss$hal$client$runtime$server$ServerMonitorColumn_org$jboss$hal$client$runtime$server$ServerMonitorColumn_methodInjection = function org$jboss$hal$client$runtime$server$ServerMonitorColumn_org$jboss$hal$client$runtime$server$ServerMonitorColumn_methodInjection(_0, _1, _2, _3, _4, _5, _6){\n  return new ServerMonitorColumn(_0, _1, _2, _3, _4, _5, _6);\n}\n;\ndefineClass(1113, 1, {60:1, 1:1});\n_.onSuccess_1 = function onSuccess_224(){\n  this.val$callback2.onSuccess_0(this.this$11.this$01.get_Key$type$org$jboss$hal$client$runtime$server$ServerMonitorColumn$_annotation$$none$$());\n}\n;\nfunction supportsListLogFiles(version){\n  $clinit_ManagementModel();\n  return ensureVersion(version, V_2_0_0);\n}\n\ndefineClass(116, 1, {1:1, 125:1});\n_.commited = function commited(){\n  return 'Commited';\n}\n;\n_.processors_0 = function processors(){\n  return 'Processors';\n}\n;\n_.used = function used_0(){\n  return 'Used';\n}\n;\ndefineClass(229, 1, {1:1, 259:1});\n_.uptime_0 = function uptime(arg0){\n  return 'Uptime: ' + arg0;\n}\n;\n$entry(onLoad)(43);\n\n//# sourceURL=hal-43.js\n")
