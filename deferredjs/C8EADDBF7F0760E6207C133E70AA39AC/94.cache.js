$wnd.hal.runAsyncCallback94("function counting(){\n  $clinit_Collectors();\n  return reducing(valueOf_23(0), new Collectors$lambda$0$Type, new Collectors$lambda$1$Type);\n}\n\nfunction lambda$0_8(item_0){\n  $clinit_Collectors();\n  return valueOf_23(1);\n}\n\nfunction lambda$1_2(a_0, b_1){\n  $clinit_Collectors();\n  return valueOf_23(add_25(castTo(valueOf_23(a_0.longValue()), 179).longValue(), b_1.longValue()));\n}\n\nfunction lambda$10(identity_0){\n  $clinit_Collectors();\n  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {3:1, 1:1, 4:1}, 1, 5, [identity_0]);\n}\n\nfunction lambda$11(op_0, mapper_1, u_2, t_3){\n  $clinit_Collectors();\n  return setCheck(u_2, 0, op_0.apply_6(u_2[0], mapper_1.apply_2(t_3)));\n}\n\nfunction lambda$12(op_0, u1_1, u2_2){\n  $clinit_Collectors();\n  {\n    setCheck(u1_1, 0, op_0.apply_6(u1_1[0], u2_2[0]));\n    return u1_1;\n  }\n}\n\nfunction lambda$13(a_0){\n  $clinit_Collectors();\n  return a_0[0];\n}\n\nfunction reducing(identity, mapper, op){\n  return of_23(new Collectors$lambda$10$Type(identity), new Collectors$lambda$11$Type(op, mapper), new Collectors$lambda$12$Type(op), new Collectors$lambda$13$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), {3:1, 20:1, 1:1, 4:1}, 265, 0, []));\n}\n\nfunction $clinit_Collectors$lambda$0$Type(){\n  $clinit_Collectors$lambda$0$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$0$Type(){\n  $clinit_Collectors$lambda$0$Type();\n}\n\ndefineClass(1388, 1, {1:1}, Collectors$lambda$0$Type);\n_.andThen = function andThen_7(after){\n  return $andThen(this, after);\n}\n;\n_.apply_2 = function apply_18(arg0){\n  return lambda$0_8(arg0);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$0$Type', 1388, Ljava_lang_Object_2_classLit);\nfunction $clinit_Collectors$lambda$1$Type(){\n  $clinit_Collectors$lambda$1$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$1$Type(){\n  $clinit_Collectors$lambda$1$Type();\n}\n\ndefineClass(1389, 1, {1:1}, Collectors$lambda$1$Type);\n_.apply_6 = function apply_19(arg0, arg1){\n  return lambda$1_2(arg0, arg1);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$1$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$1$Type', 1389, Ljava_lang_Object_2_classLit);\nfunction $clinit_Collectors$lambda$10$Type(){\n  $clinit_Collectors$lambda$10$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$10$Type(identity_0){\n  $clinit_Collectors$lambda$10$Type();\n  this.identity_0 = identity_0;\n}\n\ndefineClass(1400, 1, {1:1, 27:1}, Collectors$lambda$10$Type);\n_.get_0 = function get_70(){\n  return lambda$10(this.identity_0);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$10$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$10$Type', 1400, Ljava_lang_Object_2_classLit);\nfunction $clinit_Collectors$lambda$11$Type(){\n  $clinit_Collectors$lambda$11$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$11$Type(op_0, mapper_1){\n  $clinit_Collectors$lambda$11$Type();\n  this.op_0 = op_0;\n  this.mapper_1 = mapper_1;\n}\n\ndefineClass(1401, 1, {1:1}, Collectors$lambda$11$Type);\n_.accept = function accept_11(arg0, arg1){\n  lambda$11(this.op_0, this.mapper_1, arg0, arg1);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$11$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$11$Type', 1401, Ljava_lang_Object_2_classLit);\nfunction $clinit_Collectors$lambda$12$Type(){\n  $clinit_Collectors$lambda$12$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$12$Type(op_0){\n  $clinit_Collectors$lambda$12$Type();\n  this.op_0 = op_0;\n}\n\ndefineClass(1402, 1, {1:1}, Collectors$lambda$12$Type);\n_.apply_6 = function apply_20(arg0, arg1){\n  return lambda$12(this.op_0, arg0, arg1);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$12$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$12$Type', 1402, Ljava_lang_Object_2_classLit);\nfunction $clinit_Collectors$lambda$13$Type(){\n  $clinit_Collectors$lambda$13$Type = emptyMethod;\n}\n\nfunction Collectors$lambda$13$Type(){\n  $clinit_Collectors$lambda$13$Type();\n}\n\ndefineClass(1403, 1, {1:1}, Collectors$lambda$13$Type);\n_.andThen = function andThen_8(after){\n  return $andThen(this, after);\n}\n;\n_.apply_2 = function apply_21(arg0){\n  return lambda$13(arg0);\n}\n;\nvar Ljava_util_stream_Collectors$lambda$13$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$13$Type', 1403, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn(){\n  $clinit_JobColumn = emptyMethod;\n  $clinit_FinderColumn();\n}\n\nfunction JobColumn(finder, columnActionFactory, itemActionFactory, deploymentResources, finderPathFactory, places, eventBus, dispatcher, metadataRegistry, resources){\n  $clinit_JobColumn();\n  FinderColumn.call(this, (new FinderColumn$Builder(finder, 'job', 'Job')).columnAction(columnActionFactory.refresh_12('job-refresh')).useFirstActionAsBreadcrumbHandler_0().showCount_0().withFilter_0().filterDescription_0(resources.messages_3().jobExecutionColumnFilterDescription()));\n  this.$init_1877();\n  this.eventBus = eventBus;\n  this.dispatcher_0 = dispatcher;\n  this.metadataRegistry_0 = metadataRegistry;\n  this.resources = resources;\n  this.intervalHandles = new HashMap;\n  this.setItemsProvider(new JobColumn$lambda$0$Type(this, deploymentResources));\n  this.setItemRenderer(new JobColumn$lambda$1$Type(this, resources, places, itemActionFactory));\n  this.setPreviewCallback(new JobColumn$lambda$2$Type(this, finderPathFactory, places, resources));\n}\n\nfunction lambda$4_169(jobId_0, o_1, failure_2){\n  $clinit_JobColumn();\n  stopProgress_1(jobId_0);\n}\n\nfunction lambda$5_143(jobId_0, o_1, exception_2){\n  $clinit_JobColumn();\n  stopProgress_1(jobId_0);\n}\n\ndefineClass(5078, 33, {1:1, 7:1, 8:1, 33:1}, JobColumn);\n_.$init_1877 = function $init_1877(){\n}\n;\n_.lambda$0_242 = function lambda$0_388(deploymentResources_1, context_1, callback_2){\n  $clinit_JobColumn();\n  deploymentResources_1.readChildren_11('batch-jberet', 'job', new JobColumn$0methodref$ctor$Type, new JobColumn$lambda$7$Type(this, callback_2));\n}\n;\n_.lambda$1_179 = function lambda$1_283(resources_1, places_2, itemActionFactory_3, item_3){\n  $clinit_JobColumn();\n  return new JobColumn$1(this, item_3, resources_1, places_2, itemActionFactory_3);\n}\n;\n_.lambda$2_152 = function lambda$2_232(finderPathFactory_1, places_2, resources_3, itm_3){\n  $clinit_JobColumn();\n  return new JobPreview(this, itm_3, finderPathFactory_1, places_2, resources_3);\n}\n;\n_.lambda$3_128 = function lambda$3_187(jobId_1, result_1){\n  $clinit_JobColumn();\n  var handle;\n  {\n    if (result_1.asInt() == 0) {\n      stopProgress_1(jobId_1);\n      if (this.intervalHandles.containsKey(jobId_1)) {\n        handle = doubleValue__D__devirtual$(castToDouble(this.intervalHandles.remove(jobId_1)));\n        $wnd.window.clearInterval(handle);\n      }\n      this.refresh_4(($clinit_FinderColumn$RefreshMode() , RESTORE_SELECTION));\n    }\n  }\n}\n;\n_.lambda$6_94 = function lambda$6_114(form_1, job_2){\n  $clinit_JobColumn();\n  var operation;\n  {\n    if (form_1.save()) {\n      operation = (new Operation$Builder(job_2.getAddress_0().parent, 'start-job')).payload(castTo(form_1.model, 14)).build();\n      this.dispatcher_0.execute_20(operation, new JobColumn$lambda$8$Type(this, form_1));\n      return true;\n    }\n    return false;\n  }\n}\n;\n_.lambda$7_76 = function lambda$7_103(callback_1, jobs_1){\n  $clinit_JobColumn();\n  var job, job$iterator, jobId;\n  {\n    callback_1.onSuccess_1(jobs_1);\n    this.clearIntervals();\n    for (job$iterator = jobs_1.iterator_0(); job$iterator.hasNext_0();) {\n      job = castTo(job$iterator.next_1(), 554);\n      jobId = job_0(job.getDeployment(), job.getSubdeployment(), job.name);\n      if (job.getRunningExecutions() > 0) {\n        startProgress_0(jobId);\n        this.intervalHandles.put(jobId, valueOf_21(setInterval_0(makeLambdaFunction(JobColumn$lambda$9$Type.prototype.onInvoke_0, JobColumn$lambda$9$Type, [this, job]), 3333, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {3:1, 1:1, 4:1}, 1, 5, []))));\n      }\n       else {\n        stopProgress_1(jobId);\n      }\n    }\n  }\n}\n;\n_.lambda$8_67 = function lambda$8_96(form_1, result_1){\n  $clinit_JobColumn();\n  var executionId, xmlName;\n  {\n    xmlName = castTo(form_1.model, 14).get('job-xml-name').asString();\n    executionId = result_1.asLong();\n    fire_17(this.eventBus, success_12(this.resources.messages_3().startJobSuccess(xmlName, executionId)));\n    this.refresh_4(($clinit_FinderColumn$RefreshMode() , RESTORE_SELECTION));\n  }\n}\n;\n_.lambda$9_56 = function lambda$9_85(job_1, o_1){\n  $clinit_JobColumn();\n  this.pollJob(job_1);\n}\n;\n_.clearIntervals = function clearIntervals(){\n  var handle, handle$iterator;\n  for (handle$iterator = this.intervalHandles.values().iterator_0(); handle$iterator.hasNext_0();) {\n    handle = castToDouble(handle$iterator.next_1());\n    $wnd.window.clearInterval(doubleValue__D__devirtual$(handle));\n  }\n  this.intervalHandles.clear();\n}\n;\n_.detach_0 = function detach_44(){\n  getClassPrototype(33).detach_0.call(this);\n  this.clearIntervals();\n}\n;\n_.pollJob = function pollJob(job){\n  var jobId, operation;\n  operation = (new Operation$Builder(job.getAddress_0(), 'read-attribute')).param_1('name', 'running-executions').build();\n  jobId = job_0(job.getDeployment(), job.getSubdeployment(), job.name);\n  this.dispatcher_0.execute_22(operation, new JobColumn$lambda$3$Type(this, jobId), new JobColumn$lambda$4$Type(jobId), new JobColumn$lambda$5$Type(jobId));\n}\n;\n_.startJob = function startJob(job){\n  $clinit_JobColumn();\n  var dialog, form_0, metadata, operationMetadata, xmlName, xmlNames;\n  xmlNames = job.get('job-xml-names').asList_2().size();\n  metadata = this.metadataRegistry_0.lookup_3(($clinit_AddressTemplates_20() , BATCH_DEPLOYMENT_TEMPLATE));\n  operationMetadata = metadata.forOperation('start-job');\n  if (xmlNames > 1) {\n    operationMetadata.description.get('attributes').get('job-xml-name').get('allowed').setNode(job.get('job-xml-names'));\n  }\n   else {\n    operationMetadata.description.get('attributes').get('job-xml-name').get('access-type').setString('read-only');\n  }\n  form_0 = (new ModelNodeForm$Builder(build_29('job', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {3:1, 1:1, 4:1, 6:1}, 2, 6, ['start-job'])), operationMetadata)).addOnly().unsorted().include_6('job-xml-name', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {3:1, 1:1, 4:1, 6:1}, 2, 6, ['properties'])).build();\n  dialog = (new Dialog$Builder(this.resources.constants_0().startJob_0())).add_26([form_0.asElement_0()]).closeIcon_0(true).closeOnEsc_0(true).primary(this.resources.constants_0().start_4(), makeLambdaFunction(JobColumn$lambda$6$Type.prototype.eval_0, JobColumn$lambda$6$Type, [this, form_0, job])).cancel().build();\n  dialog.registerAttachable(form_0, stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_ballroom_Attachable_2_classLit, 1), {3:1, 1:1, 4:1}, 8, 0, []));\n  dialog.show();\n  form_0.edit(new ModelNode);\n  if (xmlNames == 1) {\n    xmlName = castTo(job.get('job-xml-names').asList_2().getAtIndex(0), 14).asString();\n    form_0.getFormItem('job-xml-name').setValue_1(xmlName);\n  }\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn', 5078, Lorg_jboss_hal_core_finder_FinderColumn_2_classLit);\nfunction $clinit_JobColumn$0methodref$ctor$Type(){\n  $clinit_JobColumn$0methodref$ctor$Type = emptyMethod;\n}\n\nfunction JobColumn$0methodref$ctor$Type(){\n  $clinit_JobColumn$0methodref$ctor$Type();\n}\n\ndefineClass(5079, 1, {1:1}, JobColumn$0methodref$ctor$Type);\n_.get_48 = function get_433(arg0, arg1){\n  return new JobNode(arg0, arg1);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$0methodref$ctor$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/0methodref$ctor$Type', 5079, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$1(){\n  $clinit_JobColumn$1 = emptyMethod;\n  $clinit_Object();\n  $clinit_ItemDisplay_0();\n}\n\nfunction JobColumn$1(this$0, val$item, val$resources, val$places, val$itemActionFactory){\n  $clinit_JobColumn$1();\n  this.this$01 = this$0;\n  this.val$item2 = val$item;\n  this.val$resources3 = val$resources;\n  this.val$places4 = val$places;\n  this.val$itemActionFactory5 = val$itemActionFactory;\n  Object_0.call(this);\n  this.$init_1878();\n}\n\nfunction lambda$0_389(e_0){\n  $clinit_JobColumn$1();\n  return e_0.getBatchStatus().name();\n}\n\ndefineClass(5082, 1, {1:1, 7:1}, JobColumn$1);\n_.$init_1878 = function $init_1878(){\n}\n;\n_.lambda$1_180 = function lambda$1_284(itm_0){\n  $clinit_JobColumn$1();\n  this.this$01.startJob(itm_0);\n}\n;\n_.nextColumn_0 = function nextColumn_34(){\n  return $nextColumn(this);\n}\n;\n_.actions_1 = function actions_37(){\n  var actions, builder, placeRequest;\n  actions = new ArrayList;\n  builder = this.val$places4.selectedServer_0('job-runtime').with_0('deployment', this.val$item2.getDeployment());\n  if (jsNotEquals(this.val$item2.getSubdeployment(), null)) {\n    builder.with_0('subdeployment', this.val$item2.getSubdeployment());\n  }\n  placeRequest = builder.with_0('name', this.val$item2.name).build_3();\n  actions.add(this.val$itemActionFactory5.view_2(placeRequest));\n  actions.add((new ItemAction$Builder).title_9(this.val$resources3.constants_0().start_4()).constraint_1(executable(($clinit_AddressTemplates_20() , BATCH_DEPLOYMENT_TEMPLATE), 'start-job')).handler_5(new JobColumn$1$lambda$1$Type(this)).build_15());\n  return actions;\n}\n;\n_.asElement_0 = function asElement_122(){\n  return withSubtitle(this.val$item2.name, this.val$item2.getPath());\n}\n;\n_.getFilterData = function getFilterData_33(){\n  var data_0;\n  data_0 = new HashSet_1(asList_3(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {3:1, 1:1, 4:1, 6:1}, 2, 6, [this.val$item2.name, this.val$item2.getDeployment()])));\n  if (jsNotEquals(this.val$item2.getSubdeployment(), null)) {\n    data_0.add(this.val$item2.getSubdeployment());\n  }\n  if (this.val$item2.getInstanceCount() > 0) {\n    this.val$item2.getExecutions().stream().map_3(new JobColumn$1$lambda$0$Type).forEach_0(new JobColumn$1$1methodref$add$Type(data_0));\n  }\n  return join_7(' ', data_0);\n}\n;\n_.getIcon = function getIcon_33(){\n  if (this.val$item2.getInstanceCount() == 0) {\n    return info_0();\n  }\n   else if (this.val$item2.hasExecutions(of_21(($clinit_ExecutionNode$BatchStatus() , FAILED_3), stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_client_runtime_subsystem_batch_ExecutionNode$BatchStatus_2_classLit, 1), {3:1, 20:1, 1:1, 4:1}, 290, 0, [($clinit_ExecutionNode$BatchStatus() , ABANDONED)])))) {\n    return warning_1();\n  }\n   else if (this.val$item2.hasExecutions_0(($clinit_ExecutionNode$BatchStatus() , STOPPED))) {\n    return stopped_0();\n  }\n  return ok_0();\n}\n;\n_.getId = function getId_44(){\n  return job_0(this.val$item2.getDeployment(), this.val$item2.getSubdeployment(), this.val$item2.name);\n}\n;\n_.getTitle = function getTitle_37(){\n  return this.val$item2.name;\n}\n;\n_.getTooltip = function getTooltip_33(){\n  if (this.val$item2.getInstanceCount() == 0) {\n    return this.val$resources3.constants_0().noExecutions();\n  }\n   else if (this.val$item2.hasExecutions(of_21(($clinit_ExecutionNode$BatchStatus() , FAILED_3), stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_client_runtime_subsystem_batch_ExecutionNode$BatchStatus_2_classLit, 1), {3:1, 20:1, 1:1, 4:1}, 290, 0, [($clinit_ExecutionNode$BatchStatus() , ABANDONED)])))) {\n    return this.val$resources3.constants_0().failedExecutions();\n  }\n   else if (this.val$item2.hasExecutions_0(($clinit_ExecutionNode$BatchStatus() , STOPPED))) {\n    return this.val$resources3.constants_0().stoppedExecution();\n  }\n  return this.val$resources3.constants_0().completedExecutions();\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$1_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/1', 5082, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$1$1methodref$add$Type(){\n  $clinit_JobColumn$1$1methodref$add$Type = emptyMethod;\n}\n\nfunction JobColumn$1$1methodref$add$Type($$outer_0){\n  $clinit_JobColumn$1$1methodref$add$Type();\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(5084, 1, {1:1, 10:1}, JobColumn$1$1methodref$add$Type);\n_.accept_0 = function accept_397(arg0){\n  this.$$outer_0.add(castToString(arg0));\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$1$1methodref$add$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/1/1methodref$add$Type', 5084, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$1$lambda$0$Type(){\n  $clinit_JobColumn$1$lambda$0$Type = emptyMethod;\n}\n\nfunction JobColumn$1$lambda$0$Type(){\n  $clinit_JobColumn$1$lambda$0$Type();\n}\n\ndefineClass(5083, 1, {1:1}, JobColumn$1$lambda$0$Type);\n_.andThen = function andThen_322(after){\n  return $andThen(this, after);\n}\n;\n_.apply_2 = function apply_351(arg0){\n  return lambda$0_389(arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$1$lambda$0$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/1/lambda$0$Type', 5083, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$1$lambda$1$Type(){\n  $clinit_JobColumn$1$lambda$1$Type = emptyMethod;\n}\n\nfunction JobColumn$1$lambda$1$Type($$outer_0){\n  $clinit_JobColumn$1$lambda$1$Type();\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(5085, 1, {1:1}, JobColumn$1$lambda$1$Type);\n_.execute_6 = function execute_924(arg0){\n  this.$$outer_0.lambda$1_180(arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$1$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/1/lambda$1$Type', 5085, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$0$Type(){\n  $clinit_JobColumn$lambda$0$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$0$Type($$outer_0, deploymentResources_1){\n  $clinit_JobColumn$lambda$0$Type();\n  this.$$outer_0 = $$outer_0;\n  this.deploymentResources_1 = deploymentResources_1;\n}\n\ndefineClass(5081, 1, {1:1}, JobColumn$lambda$0$Type);\n_.get_17 = function get_434(arg0, arg1){\n  this.$$outer_0.lambda$0_242(this.deploymentResources_1, arg0, arg1);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$0$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$0$Type', 5081, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$1$Type(){\n  $clinit_JobColumn$lambda$1$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$1$Type($$outer_0, resources_1, places_2, itemActionFactory_3){\n  $clinit_JobColumn$lambda$1$Type();\n  this.$$outer_0 = $$outer_0;\n  this.resources_1 = resources_1;\n  this.places_2 = places_2;\n  this.itemActionFactory_3 = itemActionFactory_3;\n}\n\ndefineClass(5086, 1, {1:1}, JobColumn$lambda$1$Type);\n_.render_3 = function render_197(arg0){\n  return this.$$outer_0.lambda$1_179(this.resources_1, this.places_2, this.itemActionFactory_3, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$1$Type', 5086, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$2$Type(){\n  $clinit_JobColumn$lambda$2$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$2$Type($$outer_0, finderPathFactory_1, places_2, resources_3){\n  $clinit_JobColumn$lambda$2$Type();\n  this.$$outer_0 = $$outer_0;\n  this.finderPathFactory_1 = finderPathFactory_1;\n  this.places_2 = places_2;\n  this.resources_3 = resources_3;\n}\n\ndefineClass(5087, 1, {1:1}, JobColumn$lambda$2$Type);\n_.onPreview = function onPreview_36(arg0){\n  return this.$$outer_0.lambda$2_152(this.finderPathFactory_1, this.places_2, this.resources_3, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$2$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$2$Type', 5087, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$3$Type(){\n  $clinit_JobColumn$lambda$3$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$3$Type($$outer_0, jobId_1){\n  $clinit_JobColumn$lambda$3$Type();\n  this.$$outer_0 = $$outer_0;\n  this.jobId_1 = jobId_1;\n}\n\ndefineClass(5088, 1, {1:1, 10:1}, JobColumn$lambda$3$Type);\n_.accept_0 = function accept_398(arg0){\n  this.$$outer_0.lambda$3_128(this.jobId_1, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$3$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$3$Type', 5088, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$4$Type(){\n  $clinit_JobColumn$lambda$4$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$4$Type(jobId_0){\n  $clinit_JobColumn$lambda$4$Type();\n  this.jobId_0 = jobId_0;\n}\n\ndefineClass(5089, 1, {1:1}, JobColumn$lambda$4$Type);\n_.onFailed = function onFailed_20(arg0, arg1){\n  lambda$4_169(this.jobId_0, arg0, arg1);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$4$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$4$Type', 5089, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$5$Type(){\n  $clinit_JobColumn$lambda$5$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$5$Type(jobId_0){\n  $clinit_JobColumn$lambda$5$Type();\n  this.jobId_0 = jobId_0;\n}\n\ndefineClass(5090, 1, {1:1}, JobColumn$lambda$5$Type);\n_.onException = function onException_7(arg0, arg1){\n  lambda$5_143(this.jobId_0, arg0, arg1);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$5$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$5$Type', 5090, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$6$Type(){\n  $clinit_JobColumn$lambda$6$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$6$Type($$outer_0, form_1, job_2){\n  $clinit_JobColumn$lambda$6$Type();\n  this.$$outer_0 = $$outer_0;\n  this.form_1 = form_1;\n  this.job_2 = job_2;\n}\n\ndefineClass(8387, $wnd.Function, {1:1}, JobColumn$lambda$6$Type);\n_.eval_0 = function eval_12(){\n  return this.$$outer_0.lambda$6_94(this.form_1, this.job_2);\n}\n;\nfunction $clinit_JobColumn$lambda$7$Type(){\n  $clinit_JobColumn$lambda$7$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$7$Type($$outer_0, callback_1){\n  $clinit_JobColumn$lambda$7$Type();\n  this.$$outer_0 = $$outer_0;\n  this.callback_1 = callback_1;\n}\n\ndefineClass(5080, 1, {1:1, 10:1}, JobColumn$lambda$7$Type);\n_.accept_0 = function accept_399(arg0){\n  this.$$outer_0.lambda$7_76(this.callback_1, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$7$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$7$Type', 5080, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$8$Type(){\n  $clinit_JobColumn$lambda$8$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$8$Type($$outer_0, form_1){\n  $clinit_JobColumn$lambda$8$Type();\n  this.$$outer_0 = $$outer_0;\n  this.form_1 = form_1;\n}\n\ndefineClass(5091, 1, {1:1, 10:1}, JobColumn$lambda$8$Type);\n_.accept_0 = function accept_400(arg0){\n  this.$$outer_0.lambda$8_67(this.form_1, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobColumn$lambda$8$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobColumn/lambda$8$Type', 5091, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobColumn$lambda$9$Type(){\n  $clinit_JobColumn$lambda$9$Type = emptyMethod;\n}\n\nfunction JobColumn$lambda$9$Type($$outer_0, job_1){\n  $clinit_JobColumn$lambda$9$Type();\n  this.$$outer_0 = $$outer_0;\n  this.job_1 = job_1;\n}\n\ndefineClass(8388, $wnd.Function, {6333:1, 1:1}, JobColumn$lambda$9$Type);\n_.onInvoke_0 = function onInvoke_11(arg0){\n  this.$$outer_0.lambda$9_56(this.job_1, arg0);\n}\n;\nfunction lambda$1_285(status_0, e_1){\n  $clinit_JobNode();\n  return jsEquals(e_1.getBatchStatus(), status_0);\n}\n\nfunction lambda$2_233(status_0, e_1){\n  $clinit_JobNode();\n  return status_0.contains(e_1.getBatchStatus());\n}\n\ndefineClass(554, 193, {1:1, 554:1, 193:1, 14:1, 13:1});\n_.getInstanceCount = function getInstanceCount(){\n  return this.hasDefined('instance-count')?this.get('instance-count').asInt():0;\n}\n;\n_.hasExecutions = function hasExecutions(status_0){\n  return this.executions.stream().anyMatch(new JobNode$lambda$2$Type(status_0));\n}\n;\n_.hasExecutions_0 = function hasExecutions_0(status_0){\n  return this.executions.stream().anyMatch(new JobNode$lambda$1$Type(status_0));\n}\n;\nfunction $clinit_JobNode$lambda$1$Type(){\n  $clinit_JobNode$lambda$1$Type = emptyMethod;\n}\n\nfunction JobNode$lambda$1$Type(status_0){\n  $clinit_JobNode$lambda$1$Type();\n  this.status_0 = status_0;\n}\n\ndefineClass(5615, 1, {1:1, 23:1}, JobNode$lambda$1$Type);\n_.and = function and_106(other){\n  return $and(this, other);\n}\n;\n_.or_1 = function or_112(other){\n  return $or(this, other);\n}\n;\n_.test_0 = function test_116(arg0){\n  return lambda$1_285(this.status_0, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobNode$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobNode/lambda$1$Type', 5615, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobNode$lambda$2$Type(){\n  $clinit_JobNode$lambda$2$Type = emptyMethod;\n}\n\nfunction JobNode$lambda$2$Type(status_0){\n  $clinit_JobNode$lambda$2$Type();\n  this.status_0 = status_0;\n}\n\ndefineClass(5616, 1, {1:1, 23:1}, JobNode$lambda$2$Type);\n_.and = function and_107(other){\n  return $and(this, other);\n}\n;\n_.or_1 = function or_113(other){\n  return $or(this, other);\n}\n;\n_.test_0 = function test_117(arg0){\n  return lambda$2_233(this.status_0, arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobNode$lambda$2$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobNode/lambda$2$Type', 5616, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobPreview(){\n  $clinit_JobPreview = emptyMethod;\n  $clinit_PreviewContent();\n}\n\nfunction JobPreview(column, job, finderPathFactory, places, resources){\n  $clinit_JobPreview();\n  var path, placeRequest;\n  PreviewContent_2.call(this, job.name, job.getPath());\n  this.$init_1884();\n  path = finderPathFactory.deployment_2(job.getDeployment());\n  placeRequest = places.finderPlace('deployments', path).build_3();\n  removeChildrenFrom(this.getLeadElement());\n  this.getLeadElement().appendChild(castTo(castTo(a_4(places.historyToken_0(placeRequest)).textContent_0(job.getPath()), 5).title_3(resources.messages_3().goTo_1('Deployments')), 5).asElement_0());\n  this.empty_0 = (new EmptyState$Builder('job-execution-empty', resources.constants_0().noExecutions())).description_1(resources.messages_3().noExecutions_0()).build_4();\n  this.executions = (new Donut$Builder('Executions')).add_22(($clinit_ExecutionNode$BatchStatus() , STARTED).name(), resources.constants_0().running_0(), ($clinit_PatternFly() , $wnd.patternfly.pfPaletteColors).blue).add_22(($clinit_ExecutionNode$BatchStatus() , STOPPED).name(), resources.constants_0().stopped(), ($clinit_PatternFly() , $wnd.patternfly.pfPaletteColors).black500).add_22(($clinit_ExecutionNode$BatchStatus() , COMPLETED).name(), resources.constants_0().completed(), ($clinit_PatternFly() , $wnd.patternfly.pfPaletteColors).green).add_22(($clinit_ExecutionNode$BatchStatus() , FAILED_3).name(), resources.constants_0().failed(), ($clinit_PatternFly() , $wnd.patternfly.pfPaletteColors).red).add_22(($clinit_ExecutionNode$BatchStatus() , ABANDONED).name(), resources.constants_0().abandoned(), ($clinit_PatternFly() , $wnd.patternfly.pfPaletteColors).red300).legend_0(($clinit_Donut$Legend() , BOTTOM)).responsive_0(true).build_7();\n  this.registerAttachable(this.executions, stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_hal_ballroom_Attachable_2_classLit, 1), {3:1, 1:1, 4:1}, 8, 0, []));\n  setVisible(this.executions.asElement_0(), false);\n  this.getHeaderContainer().appendChild(refreshLink(new JobPreview$lambda$0$Type(column)));\n  this.previewBuilder().addAll_5(stampJavaTypeInfo(getClassLiteralForArray(Lorg_jboss_gwt_elemento_core_IsElement_2_classLit, 1), {3:1, 1:1, 4:1, 182:1}, 7, 0, [this.empty_0, this.executions]));\n}\n\nfunction lambda$0_393(column_0){\n  $clinit_JobPreview();\n  column_0.refresh_4(($clinit_FinderColumn$RefreshMode() , RESTORE_SELECTION));\n}\n\nfunction lambda$1_287(e_0){\n  $clinit_JobPreview();\n  return e_0.getBatchStatus().name();\n}\n\ndefineClass(5960, 29, {1:1, 8:1, 29:1}, JobPreview);\n_.$init_1884 = function $init_1884(){\n}\n;\n_.update_8 = function update_117(item_0){\n  this.update_40(castTo(item_0, 554));\n}\n;\n_.update_40 = function update_118(item_0){\n  var byBatchStatus, instanceCount;\n  instanceCount = item_0.get('instance-count').asInt();\n  if (instanceCount == 0) {\n    setVisible(this.empty_0.asElement_0(), true);\n    setVisible(this.executions.asElement_0(), false);\n  }\n   else {\n    setVisible(this.empty_0.asElement_0(), false);\n    setVisible(this.executions.asElement_0(), true);\n    byBatchStatus = castTo(item_0.getExecutions().stream().collect_1(groupingBy_1(new JobPreview$lambda$1$Type, counting())), 49);\n    this.executions.update_1(byBatchStatus);\n  }\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobPreview_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobPreview', 5960, Lorg_jboss_hal_core_finder_PreviewContent_2_classLit);\nfunction $clinit_JobPreview$lambda$0$Type(){\n  $clinit_JobPreview$lambda$0$Type = emptyMethod;\n}\n\nfunction JobPreview$lambda$0$Type(column_0){\n  $clinit_JobPreview$lambda$0$Type();\n  this.column_0 = column_0;\n}\n\ndefineClass(5961, 1, {1:1, 12:1}, JobPreview$lambda$0$Type);\n_.execute_1 = function execute_925(){\n  lambda$0_393(this.column_0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobPreview$lambda$0$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobPreview/lambda$0$Type', 5961, Ljava_lang_Object_2_classLit);\nfunction $clinit_JobPreview$lambda$1$Type(){\n  $clinit_JobPreview$lambda$1$Type = emptyMethod;\n}\n\nfunction JobPreview$lambda$1$Type(){\n  $clinit_JobPreview$lambda$1$Type();\n}\n\ndefineClass(5962, 1, {1:1}, JobPreview$lambda$1$Type);\n_.andThen = function andThen_327(after){\n  return $andThen(this, after);\n}\n;\n_.apply_2 = function apply_356(arg0){\n  return lambda$1_287(arg0);\n}\n;\nvar Lorg_jboss_hal_client_runtime_subsystem_batch_JobPreview$lambda$1$Type_2_classLit = createForClass('org.jboss.hal.client.runtime.subsystem.batch', 'JobPreview/lambda$1$Type', 5962, Ljava_lang_Object_2_classLit);\ndefineClass(2062, 1, {1:1});\n_.get_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$ = function get_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$(){\n  var result;\n  result = this.org$jboss$hal$client$runtime$subsystem$batch$JobColumn_org$jboss$hal$client$runtime$subsystem$batch$JobColumn_methodInjection(this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$Finder$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$ColumnActionFactory$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$ItemActionFactory$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_deployment().get_Key$type$org$jboss$hal$core$deployment$DeploymentResources$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_finder().get_Key$type$org$jboss$hal$core$finder$FinderPathFactory$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_core_mvp().get_Key$type$org$jboss$hal$core$mvp$Places$_annotation$$none$$(), this.injector.getFragment_com_google_web_bindery_event_shared().get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_dmr_dispatch().get_Key$type$org$jboss$hal$dmr$dispatch$Dispatcher$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_meta().get_Key$type$org$jboss$hal$meta$MetadataRegistry$_annotation$$none$$(), this.injector.getFragment_org_jboss_hal_resources().get_Key$type$org$jboss$hal$resources$Resources$_annotation$$none$$());\n  this.memberInject_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$(result);\n  return result;\n}\n;\n_.memberInject_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$ = function memberInject_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$(injectee){\n}\n;\n_.org$jboss$hal$client$runtime$subsystem$batch$JobColumn_org$jboss$hal$client$runtime$subsystem$batch$JobColumn_methodInjection = function org$jboss$hal$client$runtime$subsystem$batch$JobColumn_org$jboss$hal$client$runtime$subsystem$batch$JobColumn_methodInjection(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9){\n  return new JobColumn(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9);\n}\n;\ndefineClass(2066, 1, {41:1, 1:1});\n_.onSuccess_2 = function onSuccess_199(){\n  this.val$callback2.onSuccess_1(this.this$11.this$01.get_Key$type$org$jboss$hal$client$runtime$subsystem$batch$JobColumn$_annotation$$none$$());\n}\n;\ndefineClass(145, 1, {1:1, 151:1});\n_.abandoned = function abandoned(){\n  return 'Abandoned';\n}\n;\n_.completedExecutions = function completedExecutions(){\n  return 'All executions completed successfully';\n}\n;\n_.failedExecutions = function failedExecutions(){\n  return 'Contains failed executions';\n}\n;\n_.startJob_0 = function startJob_0(){\n  return 'Start Job';\n}\n;\n_.stoppedExecution = function stoppedExecution(){\n  return 'Contains stopped executions';\n}\n;\nfunction info_0(){\n  $clinit_Icons();\n  return castTo(span_1().css_0(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {3:1, 1:1, 4:1, 6:1}, 2, 6, [INFO_0])), 5).asElement_0();\n}\n\ndefineClass(214, 1, {1:1, 228:1});\n_.jobExecutionColumnFilterDescription = function jobExecutionColumnFilterDescription(){\n  return 'Filter by: job name, deployment and execution status';\n}\n;\n_.startJobSuccess = function startJobSuccess(arg0, arg1){\n  return (new SafeHtmlBuilder).appendHtmlConstant('Job <strong>').appendEscaped(arg0).appendHtmlConstant('<\\/strong> successfully started with execution ID <strong>').append_3(arg1).appendHtmlConstant('<\\/strong>.').toSafeHtml();\n}\n;\n$entry(onLoad_1)(94);\n\n//# sourceURL=hal-94.js\n")
